@model MvcFarmacia.Models.Produto

@{
    ViewData["Title"] = "Editar - Produto";
}

<h1>Editar</h1>

<h4>Produto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Descricao" class="control-label"></label>
                <input asp-for="Descricao" class="form-control" />
                <span asp-validation-for="Descricao" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Preco" class="control-label"></label>
                <input asp-for="Preco" class="form-control" />
                <span asp-validation-for="Preco" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdTipoProduto" class="control-label"></label>
                <select asp-for="IdTipoProduto" class="form-control" asp-items="ViewBag.IdTipoProduto"></select>
                <span asp-validation-for="IdTipoProduto" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdFarmacia" class="control-label"></label>
                <select asp-for="IdFarmacia" class="form-control" asp-items="ViewBag.IdFarmacia"></select>
                <span asp-validation-for="IdFarmacia" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Voltar</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $.validator.methods.range = function(value, element, param) {
            var globalizedValue = value.replace(".", "");
            globalizedValue = globalizedValue.replace(",", ".");
            return this.optional(element) ||
                (globalizedValue >= param[0] &&
                    globalizedValue <= param[1]);
        };

        $.validator.methods.number = function(value, element) {
            return this.optional(element) ||
                /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/
                    .test(value);
        };
    </script>
}
